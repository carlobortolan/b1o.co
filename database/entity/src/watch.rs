//! SeaORM Entity. Generated by sea-orm-codegen 0.10.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use strum::{Display, EnumString};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "watch")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub description: String,
    pub reference: String,
    pub movement: String,
    pub manufacturer: String,
    pub manufacturer_location: String,
    #[sea_orm(column_type = "Decimal(Some((3, 2)))")]
    pub average_rating: Decimal,
    pub image_url: String,
    pub style: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation, Display, EnumString)]
pub enum Relation {
    #[sea_orm(has_many = "super::review::Entity")]
    Review,
}

impl Related<super::review::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Review.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
