//! SeaORM Entity. Generated by sea-orm-codegen 0.10.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, Default)]
#[sea_orm(table_name = "review")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub reviewer_name: String,
    pub review_text: String,
    pub rating: i32,
    pub date: DateTime,
    pub watch_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::watch::Entity",
        from = "Column::WatchId",
        to = "super::watch::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Watch,
}

impl Related<super::watch::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Watch.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
